   1: program NoFinalDot; 
Parser:   <program>
   2: var x : boolean; 
Parser:     <block>
Parser:       <var decl part>
Parser:         <var decl>
Parser:           <type>
Parser:             <type name>
   3: begin 
Parser:             </type name>
Parser:           </type>
   4:    x := true; 
Parser:         </var decl>
Parser:       </var decl part>
Parser:       <statm list>
Parser:         <statement>
Parser:           <assign statm>
Parser:             <variable>
Parser:             </variable>
Parser:             <expression>
Parser:               <simple expr>
Parser:                 <term>
Parser:                   <factor>
Parser:                     <variable>
   5:    write('x', '=', x, eol) 
Parser:                     </variable>
Parser:                   </factor>
Parser:                 </term>
Parser:               </simple expr>
Parser:             </expression>
Parser:           </assign statm>
Parser:         </statement>
Parser:         <statement>
Parser:           <proc call>
Parser:             <expression>
Parser:               <simple expr>
Parser:                 <term>
Parser:                   <factor>
Parser:                     <unsigned constant>
Parser:                       <char literal>
Parser:                       </char literal>
Parser:                     </unsigned constant>
Parser:                   </factor>
Parser:                 </term>
Parser:               </simple expr>
Parser:             </expression>
Parser:             <expression>
Parser:               <simple expr>
Parser:                 <term>
Parser:                   <factor>
Parser:                     <unsigned constant>
Parser:                       <char literal>
Parser:                       </char literal>
Parser:                     </unsigned constant>
Parser:                   </factor>
Parser:                 </term>
Parser:               </simple expr>
Parser:             </expression>
Parser:             <expression>
Parser:               <simple expr>
Parser:                 <term>
Parser:                   <factor>
Parser:                     <variable>
Parser:                     </variable>
Parser:                   </factor>
Parser:                 </term>
Parser:               </simple expr>
Parser:             </expression>
Parser:             <expression>
Parser:               <simple expr>
Parser:                 <term>
Parser:                   <factor>
Parser:                     <variable>
   6: end 
Parser:                     </variable>
Parser:                   </factor>
Parser:                 </term>
Parser:               </simple expr>
Parser:             </expression>
Parser:           </proc call>
Parser:         </statement>
Parser:       </statm list>
Parser:     </block>
Error in last line: Expected a . but found a e-o-f!
